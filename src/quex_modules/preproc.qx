token {
    // alap karakterosztalyba tartozo karakterek nem ures sorozata
    BASECHARS;
    // egy db ismeretlen karakter helyettesitoje
    REPLACEMENTCHAR;
    FAILURE;
}

mode PREPROC {
    // sorokra tordelunk, kulonben tul hosszuak lennenek a tokenek
    [: difference({BASE_CLASS}, {NEWLINECHAR}) :]+ => QUEX_TKN_BASECHARS(Lexeme);
    {NEWLINECHAR}+      => QUEX_TKN_BASECHARS(Lexeme);

    .                   {
        std::cerr << "invalid character ("
                  << self.line_number() << ","
                  << self.column_number() << "): "
                  << QUEX_CONVERTER_STRING(unicode, char)(Lexeme) << std::endl;
        self_send1(QUEX_TKN_REPLACEMENTCHAR, self.REPLACEMENTCHAR_CPP.c_str());
    }

    <<FAIL>>        => QUEX_TKN_FAILURE(Lexeme);
    <<EOF>>         => QUEX_TKN_TERMINATION;
}

// vim:set syntax=cpp:

