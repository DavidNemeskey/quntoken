token {
    TAG;
    ANYCHAR;
    FAILURE;
}


mode PROGRAM {
    // base characters
    {BASE_CLASS}+                   => QUEX_TKN_ANYCHAR(Lexeme);

    // close json items with comma and open another
    {SNT_CLOSE_QX}{WS_OPEN_QX}      {self_send1(QUEX_TKN_TAG, L"],\n\"ws\": \"");}
    {SNT_CLOSE_QX}{SNT_OPEN_QX}     {self_send1(QUEX_TKN_TAG, L"],\n\"s\": [\n" );}
    {WS_CLOSE_QX}{SNT_OPEN_QX}      {self_send1(QUEX_TKN_TAG, L"\",\n\"s\": [\n");}
    {WS_CLOSE_QX}{WORD_OPEN_QX}     {self_send1(QUEX_TKN_TAG, L"\",\n\"w\": \"" );}
    {WS_CLOSE_QX}{PUNCT_OPEN_QX}    {self_send1(QUEX_TKN_TAG, L"\",\n\"c\": \"" );}
    {WORD_CLOSE_QX}{WS_OPEN_QX}     {self_send1(QUEX_TKN_TAG, L"\",\n\"ws\": \"");}
    {WORD_CLOSE_QX}{WORD_OPEN_QX}   {self_send1(QUEX_TKN_TAG, L"\",\n\"w\": \"" );}
    {WORD_CLOSE_QX}{PUNCT_OPEN_QX}  {self_send1(QUEX_TKN_TAG, L"\",\n\"c\": \"" );}
    {PUNCT_CLOSE_QX}{WS_OPEN_QX}    {self_send1(QUEX_TKN_TAG, L"\",\n\"ws\": \"");}
    {PUNCT_CLOSE_QX}{WORD_OPEN_QX}  {self_send1(QUEX_TKN_TAG, L"\",\n\"w\": \"" );}
    {PUNCT_CLOSE_QX}{PUNCT_OPEN_QX} {self_send1(QUEX_TKN_TAG, L"\",\n\"c\": \"" );}

    // open json items
    {SNT_OPEN_QX}                   {self_send1(QUEX_TKN_TAG, L"\"s\": [\n");}
    {WS_OPEN_QX}                    {self_send1(QUEX_TKN_TAG, L"\"ws\": \"");}
    {WORD_OPEN_QX}                  {self_send1(QUEX_TKN_TAG, L"\"w\": \"" );}
    {PUNCT_OPEN_QX}                 {self_send1(QUEX_TKN_TAG, L"\"c\": \"" );}

    // close json items
    {SNT_CLOSE_QX}                  {self_send1(QUEX_TKN_TAG, L"]\n");}
    {WS_CLOSE_QX}                   {self_send1(QUEX_TKN_TAG, L"\"\n");}
    {WORD_CLOSE_QX}                 {self_send1(QUEX_TKN_TAG, L"\"\n");}
    {PUNCT_CLOSE_QX}                {self_send1(QUEX_TKN_TAG, L"\"\n");}

    <<FAIL>>                        => QUEX_TKN_FAILURE(Lexeme);
    <<EOF>>                         => QUEX_TKN_TERMINATION;
}

