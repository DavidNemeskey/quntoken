token {
    ANYCHAR;
    FAILURE;
}


start = PROGRAM;

mode PROGRAM {
    // WORD+WS or PUNC+WS 
    {WORD_OPEN_QX}{NONWS}+{WORD_CLOSE_QX}{WS_OPEN_QX} {
                        self_send2(QUEX_TKN_ANYCHAR, LexemeBegin + 1, LexemeEnd -2);
                        self_send1(QUEX_TKN_ANYCHAR, L"\t");
    }
    {PUNCT_OPEN_QX}{NONWS}+{PUNCT_CLOSE_QX}{WS_OPEN_QX} {
                        self_send2(QUEX_TKN_ANYCHAR, LexemeBegin + 1, LexemeEnd -2);
                        self_send1(QUEX_TKN_ANYCHAR, L"\t");
    }
    {WSPACE}+{WS_CLOSE_QX} {
        /* std::wcerr << L"convtsv: {WSPACE}+{WS_CLOSE_QX}" << std::endl; */
        std::wstring LEX(LexemeBegin, LexemeEnd -1);
        self.escape_ws(LEX);
        self_send1(QUEX_TKN_ANYCHAR, L"\"");
        self_send1(QUEX_TKN_ANYCHAR, LEX.c_str());
        self_send1(QUEX_TKN_ANYCHAR, L"\"\n");
    }

    // WORD+NONWS or PUNCT+NONWS
    {WORD_OPEN_QX}{NONWS}+{WORD_CLOSE_QX} {
                        self_send2(QUEX_TKN_ANYCHAR, LexemeBegin + 1, LexemeEnd -1);
                        self_send1(QUEX_TKN_ANYCHAR, L"\t\"\"\n");
    }
    {PUNCT_OPEN_QX}{NONWS}+{PUNCT_CLOSE_QX} {
                        self_send2(QUEX_TKN_ANYCHAR, LexemeBegin + 1, LexemeEnd -1);
                        self_send1(QUEX_TKN_ANYCHAR, L"\t\"\"\n");
    }

    // mondat eleje, vege, mondatkozi szokozok
    {SNT_OPEN_QX}       {}
    {SNT_CLOSE_QX}{TAGGED_WS_SEQ} {
        std::wstring LEX(LexemeBegin+2, LexemeEnd-1);
        self.escape_ws(LEX);
        self_send1(QUEX_TKN_ANYCHAR, L"\t\"");
        self_send1(QUEX_TKN_ANYCHAR, LEX.c_str());
        self_send1(QUEX_TKN_ANYCHAR, L"\"\n");
    }
    {SNT_CLOSE_QX}      {self_send1(QUEX_TKN_ANYCHAR, L"\t\"\"\n"); }

    // ennek nem kene lefunia...
    {TAGGED_WS_SEQ}+    {}

    <<FAIL>>            => QUEX_TKN_FAILURE(Lexeme);
    <<EOF>>             => QUEX_TKN_TERMINATION;
}

